# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "teams" ]
  pull_request:
    branches: [ "teams" ]

jobs:
  request_approval:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Send Teams Approval Request
        run: |
          response=$(curl -X POST -H "Content-Type: application/json" -d '{
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.0",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "Pipeline Approval Request",
                      "weight": "bolder",
                      "size": "medium"
                    }
                  ],
                  "actions": [
                    {
                      "type": "Action.Submit",
                      "title": "Approve",
                      "data": "approve"
                    },
                    {
                      "type": "Action.Submit",
                      "title": "Reject",
                      "data": "reject"
                    }
                  ]
                }
              }
            ]
          }' ${{ secrets.TEAMS_WEBHOOK_URL }})
          
          echo "$response"

  wait_for_approval:
    needs: request_approval
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Wait for Approval
        id: approval
        run: |
          for i in {1..30}; do
            sleep 20
            response=$(curl -X GET "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/reviews?state=APPROVED" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
            if [[ "$response" != "[]" ]]; then
              echo "Pipeline approved. Continuing with the workflow..."
              exit 0
            fi
          done
          
          echo "Pipeline not approved within the timeout. Exiting the workflow."
          exit 1
